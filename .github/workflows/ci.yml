name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: dtrust
          POSTGRES_PASSWORD: dtrust_test_password
          POSTGRES_DB: dtrust_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v6
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file for testing
        run: |
          cat > .env << EOF
          DATABASE_URL="postgresql://dtrust:dtrust_test_password@localhost:5432/dtrust_test_db?schema=public"
          PORT=3000
          NODE_ENV=test
          HEDERA_ACCOUNT_ID="0.0.12345"
          HEDERA_PRIVATE_KEY="302e020100300506032b65700422042012345678901234567890123456789012"
          HCS_TOPIC_ID="0.0.67890"
          HEDERA_NETWORK="testnet"
          EOF

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Run database migrations
        run: npx prisma migrate deploy

      - name: Type check
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build

      - name: Check build artifacts
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed - dist directory not found"
            exit 1
          fi
          echo "Build successful - dist directory created"
          ls -la dist/

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: dtrust-api:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image
        run: |
          docker build -t dtrust-api:test .
          echo "Docker image built successfully"

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma Client
        run: npm run prisma:generate

      - name: Check TypeScript types
        run: npx tsc --noEmit

      - name: Validate Prisma schema
        run: npx prisma validate

      - name: Check for security vulnerabilities
        run: npm audit --audit-level=high
        continue-on-error: true
